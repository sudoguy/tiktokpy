[tool.poetry]
name = "tiktokpy"
version = "0.9.4"
description = "Tool for automated TikTok interactions."

license = "MIT"
authors = ["Evgeny Kemerov <eskemerov@gmail.com>"]

readme = "README.md"
include = ["LICENSE"]

repository = "https://github.com/sudoguy/tiktokpy/"
homepage = "https://github.com/sudoguy/tiktokpy/"

keywords = ["tiktok", "bot", "api", "wrapper", "tiktokbot", "tiktokpy", "webapi", "marketing"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.scripts]
tiktokpy = "tiktokpy.cli:app"

[tool.poetry.dependencies]
python = "^3.8"
loguru = "^0.6.0"
pydantic = "^1.6.1"
tqdm = "^4.48.0"
parsel = { version ="^1.6.0", optional = true }
dynaconf = "^3.0.0"
humanize = "^4.0.0"
typer = "^0.9.0"
playwright = "^1.18.2"
playwright-stealth = "^1.0.5"

[tool.poetry.extras]
html = ["parsel"]

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
black = "^23.7.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.2.0"
pre-commit = "^3.3.3"
isort = "^5.1.4"
mypy = "*"
bump2version = "^1.0.0"
pytest-asyncio = "^0.21.1"
pylint = "^2.7.2"
ruff = "^0.0.290"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.isort]
profile = "black"
line_length = 100


[tool.ruff]
exclude = [
    '.git',
    '__pycache__',
    '.venv',
    '.eggs',
    '*.egg',
    'quickstart.py',
]
ignore = [
    "RUF001", # we use emojies
    "E501",  # line too long, handled by black
    "C901",  # too complex
]


line-length = 100
select = [
    # pycodestyle
    "E",
    # pyflakes
    "F",
    # bugbear
    "B",
    # mccabe and flake8-comprehensions
    "C",
    # isort
    "I",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-errmsg
    "EM",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # flake8-pie
    "PIE",
    # flake8-print
    "T20",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-raise
    "RSE",
    # flake8-self
    "SLF",
    # flake8-simplify
    "SIM",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # eradicate
    "ERA",
    # pygrep-hooks
    "PGH",
    # Pylint
    "PL",
    # tryceratops
    "TRY",
    # Ruff-specific rules
    "RUF",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["I", "F"]
unfixable = ["PT"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S", "PLR"]


[tool.ruff.mccabe]
max-complexity = 6
